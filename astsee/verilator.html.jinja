<!doctype html>
<html>
<head>
<meta charset="UTF-8"/>
<style>
/* Shared CSS */
{{extern_css|safe}}
/* AST specific CSS */
a { color: inherit; }
body {
    display: flex;
    flex-flow: row nowrap;
    height: 100vh;
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 14px;
}
.pane {
    height: 100vh;
    border: solid 1px black;
    box-sizing: border-box;
    flex: 0 0 50%;
}
.source-pane {
    display: flex;
    flex-flow: column nowrap;

    .tabmenu {
        display: flex;
        flex-flow: row wrap;
    }
    .tabs {
        height: 100%;
        position: relative;
    }
    .tab {
        position: absolute;
        background: white;
        height: 100%;
        width: 100%;
        top: 0;
        left: 0;
    }
    .tab:first-child {
        z-index: 1;
    }
}
.y-scrollable {
    overflow-y: scroll;
}
.linenos {
    user-select: none;
}
.linenos::selection {
    /* work around imperfect behaviour of "user-select:none" in firefox: programmatically
    selected element would still be highlighted (even though it would be ignored by ctrl+c) */
    background-color: transparent;
}
</style>
<script>
var top_idx = 1;

function showtab(tabname) {
    document.getElementById(tabname).style.zIndex = ++top_idx;
}
function skipToChar(node, i) {
    // Skip to node that contains ith character.
    // Returns node, and char index relative to found node
    if(node == null) {
        return [null, i];
    } else if(node.nodeType == Node.TEXT_NODE) {
         if(i >= node.length) return skipToChar(node.nextSibling, i-node.length);
         else return [node, i];
    } else {
        let subnode = null;
        if(node.childNodes) [subnode, i] = skipToChar(node.childNodes[0], i);

        if(subnode == null || subnode.nodeType != Node.TEXT_NODE || i >= subnode.length) {
            // childlist didn't suffice, try siblings
            return skipToChar(node.nextSibling, i);
        } else {
            return [subnode, i];
        }
    }
}
function selectFileFragment(name, first_row, first_col, last_row, end_col) {
    showtab(name);
    const range = document.createRange();
    const [startNode, startOffset] = skipToChar(document.getElementById(name + "-" + first_row).nextSibling.nextSibling, first_col-1);
    range.setStart(startNode, startOffset);
    const [endNode, endOffset] = skipToChar(document.getElementById(name + "-" + last_row).nextSibling.nextSibling, end_col-1);
    range.setEnd(endNode, endOffset);

    // going to href would clear selection in firefox, so it should be done first
    window.location.href = "#" + name + "-" + first_row;
    const sel = window.getSelection();
    sel.removeAllRanges();
    sel.addRange(range);
    return false; // prevent default action (going to href) of <a href="..." onclick="return selectFileFragment(...)">
}
</script>
</head>
<body>

<div class="pane y-scrollable">
{{diff|safe}}
</div>

<div class="pane source-pane">
<div class="tabmenu">
{% for fname in srcfiles-%}
   <button type="button" onclick="showtab('{{fname}}')">{{fname}}</button>
{% endfor -%}
</div>
<div class="tabs">
{% for fname in srcfiles-%}
  {{make_tab(fname)|safe}}
{% endfor -%}
</div>
</div>
</body></html>

